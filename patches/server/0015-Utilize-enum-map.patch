From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Sat, 22 Oct 2022 03:08:27 -0500
Subject: [PATCH] Utilize enum map


diff --git a/src/main/java/net/minecraft/world/level/chunk/ProtoChunk.java b/src/main/java/net/minecraft/world/level/chunk/ProtoChunk.java
index 1587998d2569b65da0901292f9da940600eab0f5..486a4fe66dc8711deefa3a64dcd5551252071b4a 100644
--- a/src/main/java/net/minecraft/world/level/chunk/ProtoChunk.java
+++ b/src/main/java/net/minecraft/world/level/chunk/ProtoChunk.java
@@ -3,10 +3,8 @@ package net.minecraft.world.level.chunk;
 import com.google.common.collect.Lists;
 import it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap;
 import it.unimi.dsi.fastutil.shorts.ShortList;
-import java.util.Collections;
-import java.util.EnumSet;
-import java.util.List;
-import java.util.Map;
+
+import java.util.*;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -43,7 +41,7 @@ public class ProtoChunk extends ChunkAccess {
     private volatile ChunkStatus status = ChunkStatus.EMPTY;
     private final List<CompoundTag> entities = Lists.newArrayList();
     private final List<BlockPos> lights = Lists.newArrayList();
-    private final Map<GenerationStep.Carving, CarvingMask> carvingMasks = new Object2ObjectArrayMap<>();
+    private final Map<GenerationStep.Carving, CarvingMask> carvingMasks = new EnumMap<>(GenerationStep.Carving.class);
     @Nullable
     private BelowZeroRetrogen belowZeroRetrogen;
     private final ProtoChunkTicks<Block> blockTicks;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftParticle.java b/src/main/java/org/bukkit/craftbukkit/CraftParticle.java
index 63ba5d5ee35323de7fbc475cff18e0f9968159fb..d0ace0ecf6977e1d970045cf5d2d4f1104b9f39b 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftParticle.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftParticle.java
@@ -4,6 +4,8 @@ import com.google.common.base.Preconditions;
 import com.google.common.collect.BiMap;
 import com.google.common.collect.HashBiMap;
 import com.mojang.math.Vector3f;
+
+import java.util.EnumMap;
 import java.util.HashMap;
 import java.util.Map;
 import net.minecraft.core.BlockPos;
@@ -146,7 +148,7 @@ public enum CraftParticle {
 
     static {
         particles = HashBiMap.create();
-        aliases = new HashMap<>();
+        aliases = new EnumMap<>(Particle.class);
 
         for (CraftParticle particle : CraftParticle.values()) {
             if (particles.containsValue(particle.minecraftKey)) {
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlockStates.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlockStates.java
index 6607f540724a55ab92e876f862ff2dc3ed608bb4..329697b7a68af30fb0bf21dd7e7963407a30e9dd 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlockStates.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlockStates.java
@@ -1,11 +1,8 @@
 package org.bukkit.craftbukkit.block;
 
 import com.google.common.base.Preconditions;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
+
+import java.util.*;
 import java.util.function.BiFunction;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -107,7 +104,7 @@ public final class CraftBlockStates {
         }
     }
 
-    private static final Map<Material, BlockStateFactory<?>> FACTORIES = new HashMap<>();
+    private static final Map<Material, BlockStateFactory<?>> FACTORIES = new EnumMap<>(Material.class);
     private static final BlockStateFactory<?> DEFAULT_FACTORY = new BlockStateFactory<CraftBlockState>(CraftBlockState.class) {
         @Override
         public @NotNull CraftBlockState createBlockState(World world, BlockPos blockPosition, net.minecraft.world.level.block.state.@NotNull BlockState blockData, @org.jetbrains.annotations.Nullable BlockEntity tileEntity) {
diff --git a/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java b/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java
index cabbcdfda7ba3374c7525d956d4d200777a1f8bb..28704c9615732c24f30119a02391fe43254ae96d 100644
--- a/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java
+++ b/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java
@@ -2,6 +2,8 @@ package org.bukkit.craftbukkit.boss;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
+
+import java.util.EnumMap;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -50,7 +52,7 @@ public class CraftBossBar implements BossBar {
     }
 
     private void initialize() {
-        this.flags = new HashMap<>();
+        this.flags = new EnumMap<>(BarFlag.class);
         this.flags.put(BarFlag.DARKEN_SKY, new FlagContainer(handle::shouldDarkenScreen, handle::setDarkenScreen));
         this.flags.put(BarFlag.PLAY_BOSS_MUSIC, new FlagContainer(handle::shouldPlayBossMusic, handle::setPlayBossMusic));
         this.flags.put(BarFlag.CREATE_FOG, new FlagContainer(handle::shouldCreateWorldFog, handle::setCreateWorldFog));
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java b/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java
index 4972ce5d876d74e04a4fbfeb860f1d44e25b3470..01d9e623457b89099bcac286e5dd6511d9ce4c21 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit.inventory.util;
 
+import java.util.EnumMap;
 import java.util.HashMap;
 import java.util.Map;
 import org.bukkit.event.inventory.InventoryType;
@@ -11,7 +12,7 @@ public final class CraftInventoryCreator {
     public static final CraftInventoryCreator INSTANCE = new CraftInventoryCreator();
     //
     private final CraftCustomInventoryConverter DEFAULT_CONVERTER = new CraftCustomInventoryConverter();
-    private final Map<InventoryType, InventoryConverter> converterMap = new HashMap<>();
+    private final Map<InventoryType, InventoryConverter> converterMap = new EnumMap<>(InventoryType.class);
 
     private CraftInventoryCreator() {
         this.converterMap.put(InventoryType.CHEST, DEFAULT_CONVERTER);
diff --git a/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionEffectType.java b/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionEffectType.java
index b6d9bdb9da44c5679afe6828449bfaca62a78a84..fb02cde243d4607f2c611b1527c88cdbc29b231b 100644
--- a/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionEffectType.java
+++ b/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionEffectType.java
@@ -2,9 +2,12 @@ package org.bukkit.craftbukkit.potion;
 
 import net.minecraft.world.effect.MobEffect;
 import org.bukkit.Color;
+import org.bukkit.attribute.Attribute;
 import org.bukkit.potion.PotionEffectType;
 import org.jetbrains.annotations.NotNull;
 
+import java.util.EnumMap;
+
 
 public class CraftPotionEffectType extends PotionEffectType {
     private final @NotNull MobEffect handle;
@@ -115,7 +118,7 @@ public class CraftPotionEffectType extends PotionEffectType {
     @Override
     public java.util.@NotNull Map<org.bukkit.attribute.Attribute, org.bukkit.attribute.AttributeModifier> getEffectAttributes() {
         // re-create map each time because a nms MobEffect can have its attributes modified
-        final java.util.Map<org.bukkit.attribute.Attribute, org.bukkit.attribute.AttributeModifier> attributeMap = new java.util.HashMap<>();
+        final java.util.Map<org.bukkit.attribute.Attribute, org.bukkit.attribute.AttributeModifier> attributeMap = new EnumMap<>(Attribute.class);
         this.handle.getAttributeModifiers().forEach((attribute, attributeModifier) -> {
             attributeMap.put(org.bukkit.craftbukkit.attribute.CraftAttributeMap.fromMinecraft(attribute.toString()), org.bukkit.craftbukkit.attribute.CraftAttributeInstance.convert(attributeModifier));
         });
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index eecbfa6e776b7f8e47406e70a521e149fb4457f0..ae6dac017789db394fd0e16e3cb4268a583cae1e 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -12,12 +12,7 @@ import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.serialization.Dynamic;
 import java.io.File;
 import java.io.IOException;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Locale;
-import java.util.Map;
+import java.util.*;
 import java.util.Map.Entry;
 import java.util.logging.Level;
 import java.util.logging.Logger;
@@ -56,6 +51,7 @@ import org.bukkit.craftbukkit.block.data.CraftBlockData;
 import org.bukkit.craftbukkit.inventory.CraftCreativeCategory;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.craftbukkit.legacy.CraftLegacy;
+import org.bukkit.entity.EntityType;
 import org.bukkit.inventory.CreativeCategory;
 import org.bukkit.inventory.EquipmentSlot;
 import org.bukkit.inventory.ItemStack;
@@ -132,11 +128,11 @@ public final class CraftMagicNumbers implements UnsafeValues {
     private static final Map<Block, Material> BLOCK_MATERIAL = new HashMap<>();
     private static final Map<Item, Material> ITEM_MATERIAL = new HashMap<>();
     private static final Map<net.minecraft.world.level.material.Fluid, Fluid> FLUID_MATERIAL = new HashMap<>();
-    private static final Map<Material, Item> MATERIAL_ITEM = new HashMap<>();
-    private static final Map<Material, Block> MATERIAL_BLOCK = new HashMap<>();
-    private static final Map<Material, net.minecraft.world.level.material.Fluid> MATERIAL_FLUID = new HashMap<>();
+    private static final Map<Material, Item> MATERIAL_ITEM = new EnumMap<>(Material.class);
+    private static final Map<Material, Block> MATERIAL_BLOCK = new EnumMap<>(Material.class);
+    private static final Map<Material, net.minecraft.world.level.material.Fluid> MATERIAL_FLUID = new EnumMap<>(Material.class);
     // Paper start
-    private static final Map<org.bukkit.entity.EntityType, net.minecraft.world.entity.EntityType<?>> ENTITY_TYPE_ENTITY_TYPES = new HashMap<>();
+    private static final Map<org.bukkit.entity.EntityType, net.minecraft.world.entity.EntityType<?>> ENTITY_TYPE_ENTITY_TYPES = new EnumMap<>(EntityType.class);
     private static final Map<net.minecraft.world.entity.EntityType<?>, org.bukkit.entity.EntityType> ENTITY_TYPES_ENTITY_TYPE = new HashMap<>();
 
     static {
