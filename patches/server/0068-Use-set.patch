From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Sat, 26 Nov 2022 12:03:28 -0600
Subject: [PATCH] Use set


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 759ce24beae88332422c93be6c89e40a9b37b6fe..b0df970bb466ef9625b2eda9d5209aef17de2605 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -144,7 +144,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
     public final ServerChunkCache chunkSource;
     private final MinecraftServer server;
     public final PrimaryLevelData serverLevelData; // CraftBukkit - type
-    final List<Entity> entityTickList;
+    final Set<Entity> entityTickList;
     //public final PersistentEntitySectionManager<Entity> entityManager; // Paper - rewrite chunk system
     public boolean noSave;
     private final SleepStatus sleepStatus;
@@ -485,7 +485,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
         this.uuid = WorldUUID.getUUID(convertable_conversionsession.levelDirectory.path().toFile());
         // CraftBukkit end
         this.players = Lists.newArrayList();
-        this.entityTickList = ReferenceLists.synchronize(new ReferenceArrayList<>());
+        this.entityTickList = new ConcurrentObjectOpenHashSet<>();
         this.blockTicks = new LevelTicks<>(this::isPositionTickingWithEntitiesLoaded, this.getProfilerSupplier());
         this.fluidTicks = new LevelTicks<>(this::isPositionTickingWithEntitiesLoaded, this.getProfilerSupplier());
         this.navigatingMobs = new ConcurrentObjectOpenHashSet<>();
@@ -586,7 +586,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
     static final ForkJoinPool tickPool = new ForkJoinPool(Runtime.getRuntime().availableProcessors() - 1, factory, (t, e) -> e.printStackTrace(), true);
 
     public void tick(final BooleanSupplier shouldKeepTicking) {
-        
+
         final ServerLevel self = this;
         final ForkJoinTask<?> task = tickPool.submit(() -> {
             // Paper start - optimise checkDespawn
