From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Tue, 15 Nov 2022 00:43:48 -0600
Subject: [PATCH] Multithreading entity damage step 3


diff --git a/src/main/java/net/minecraft/world/entity/ExperienceOrb.java b/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
index 98f5b28be11dddde4b96b98f0d5f3f7b76c9c51f..bf503829500c546455fff7df55bdfae4ad7fa1d3 100644
--- a/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
+++ b/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
@@ -24,6 +24,8 @@ import org.bukkit.craftbukkit.block.CraftBlock;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
 import org.bukkit.event.entity.EntityTargetEvent;
+
+import javax.annotation.Nullable;
 // CraftBukkit end
 
 public class ExperienceOrb extends Entity {
@@ -271,7 +273,7 @@ public class ExperienceOrb extends Entity {
     protected void doWaterSplashEffect() {}
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else if (this.level.isClientSide) {
diff --git a/src/main/java/net/minecraft/world/entity/ambient/Bat.java b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
index 32b752a2fb7b13ad7cec2222776de9d2924d4668..4a0bc0676222424ad52f5b6b3f5ed40195347f74 100644
--- a/src/main/java/net/minecraft/world/entity/ambient/Bat.java
+++ b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
@@ -208,7 +208,7 @@ public class Bat extends AmbientCreature {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else {
@@ -220,7 +220,7 @@ public class Bat extends AmbientCreature {
                 // CraftBukkit End - Call BatToggleSleepEvent
             }
 
-            return super.hurt(source, block, amount);
+            return super.hurt(source, damagerEntity, damagerBlock, amount);
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
index 31e7312e1a71de9b6b44c27226b36b34834c4560..be0209df5a9243f3f9a8b25f936f6c085e1f13e0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
@@ -170,7 +170,7 @@ public class Ocelot extends Animal {
 
     @Override
     public boolean doHurtTarget(Entity target) {
-        return target.hurt(DamageSource.mobAttack(this), block, this.getAttackDamage());
+        return target.hurt(DamageSource.mobAttack(this), this, null, this.getAttackDamage());
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index a18ba764021158c0c4a19f2d94dee94c978ddada..7e03c0504bddcb849f622bfab189dd8d2b994d3c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -544,12 +544,12 @@ public class Panda extends Animal {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (!this.level.isClientSide) {
             this.sit(false);
         }
 
-        return super.hurt(source, block, amount);
+        return super.hurt(source, damagerEntity, damagerBlock, amount);
     }
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/animal/Parrot.java b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
index 00ebd1f847c873770738df15160d1b7cced1c54c..b2b2eab41c793b14f7fc0b409d58edc3be93600a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Parrot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
@@ -275,7 +275,7 @@ public class Parrot extends ShoulderRidingEntity implements FlyingAnimal {
 
             this.addEffect(new MobEffectInstance(MobEffects.POISON, 900), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.FOOD); // CraftBukkit
             if (player.isCreative() || !this.isInvulnerable()) {
-                this.hurt(DamageSource.playerAttack(player), block, Float.MAX_VALUE);
+                this.hurt(DamageSource.playerAttack(player), player, null, Float.MAX_VALUE);
             }
 
             return InteractionResult.sidedSuccess(this.level.isClientSide);
@@ -320,7 +320,7 @@ public class Parrot extends ShoulderRidingEntity implements FlyingAnimal {
 
     @Override
     public boolean doHurtTarget(Entity target) {
-        return target.hurt(DamageSource.mobAttack(this), block, 3.0F);
+        return target.hurt(DamageSource.mobAttack(this), this, null, 3.0F);
     }
 
     @Nullable
@@ -396,7 +396,7 @@ public class Parrot extends ShoulderRidingEntity implements FlyingAnimal {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else {
@@ -404,7 +404,7 @@ public class Parrot extends ShoulderRidingEntity implements FlyingAnimal {
                 // this.setOrderedToSit(false); // CraftBukkit - moved into EntityLiving.damageEntity(DamageSource, float)
             }
 
-            return super.hurt(source, block, amount);
+            return super.hurt(source, damagerEntity, damagerBlock, amount);
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
index acc8b4cd09bf49d32716dadad8be70b07e9042b1..bdb0df11d04f33017aae0c7ec7d810d9c6f86b28 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
@@ -157,7 +157,7 @@ public class Pufferfish extends AbstractFish {
     private void touch(Mob mob) {
         int i = this.getPuffState();
 
-        if (mob.hurt(DamageSource.mobAttack(this), block, (float) (1 + i))) {
+        if (mob.hurt(DamageSource.mobAttack(this), this, null, (float) (1 + i))) {
             mob.addEffect(new MobEffectInstance(MobEffects.POISON, 60 * i, 0), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
             this.playSound(SoundEvents.PUFFER_FISH_STING, 1.0F, 1.0F);
         }
@@ -168,7 +168,7 @@ public class Pufferfish extends AbstractFish {
     public void playerTouch(Player player) {
         int i = this.getPuffState();
 
-        if (player instanceof ServerPlayer && i > 0 && player.hurt(DamageSource.mobAttack(this), block, (float) (1 + i))) {
+        if (player instanceof ServerPlayer && i > 0 && player.hurt(DamageSource.mobAttack(this), this, null, (float) (1 + i))) {
             if (!this.isSilent()) {
                 ((ServerPlayer) player).connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.PUFFER_FISH_STING, 0.0F));
             }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
index 486cab64b6064be4141ac9e4158db1b4f71e1987..1f063defac26d7d4a6dab9952c9912a6372ae6ed 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
@@ -319,9 +319,9 @@ public class Rabbit extends Animal {
     public boolean doHurtTarget(Entity target) {
         if (this.getRabbitType() == 99) {
             this.playSound(SoundEvents.RABBIT_ATTACK, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
-            return target.hurt(DamageSource.mobAttack(this), block, 8.0F);
+            return target.hurt(DamageSource.mobAttack(this), this, null, 8.0F);
         } else {
-            return target.hurt(DamageSource.mobAttack(this), block, 3.0F);
+            return target.hurt(DamageSource.mobAttack(this), this, null, 3.0F);
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index ccb774f6aeafe6a3be8e29a8c2b5830efd9c64b7..9a6fb4bf61f94d79765a54dfbc80bc57a164820d 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -105,7 +105,7 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
             Biome biomebase = this.level.getBiome(blockposition).value();
 
             if (biomebase.shouldSnowGolemBurn(blockposition)) {
-                this.hurt(CraftEventFactory.MELTING, block, 1.0F); // CraftBukkit - DamageSource.BURN -> CraftEventFactory.MELTING
+                this.hurt(CraftEventFactory.MELTING, null, null, 1.0F); // CraftBukkit - DamageSource.BURN -> CraftEventFactory.MELTING
             }
 
             if (!this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Squid.java b/src/main/java/net/minecraft/world/entity/animal/Squid.java
index 5c9ca7c8b14bed06b48659fff4095d66c1563ac1..8029f981d919678d6e1f3594e6bb13ee6358fc71 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Squid.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Squid.java
@@ -171,8 +171,8 @@ public class Squid extends WaterAnimal {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
-        if (super.hurt(source, block, amount) && this.getLastHurtByMob() != null) {
+    public boolean hurt(DamageSource source, @javax.annotation.Nullable Entity damagerEntity, @javax.annotation.Nullable final org.bukkit.block.Block damagerBlock, float amount) {
+        if (super.hurt(source, damagerEntity, damagerBlock, amount) && this.getLastHurtByMob() != null) {
             if (!this.level.isClientSide) {
                 this.spawnInk();
             }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index 13d77b3dd93a4416dae706257c29a6feb8a6e2e4..f5542b76d560834e5d42428ff67defd11fba6bc1 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -336,9 +336,7 @@ public class Turtle extends Animal {
 
     @Override
     public void thunderHit(ServerLevel world, LightningBolt lightning) {
-        org.bukkit.craftbukkit.event.CraftEventFactory.entityDamage = lightning; // CraftBukkit
-        this.hurt(DamageSource.LIGHTNING_BOLT, block, Float.MAX_VALUE);
-        org.bukkit.craftbukkit.event.CraftEventFactory.entityDamage = null; // CraftBukkit
+        this.hurt(DamageSource.LIGHTNING_BOLT, lightning, null, Float.MAX_VALUE);
     }
 
     private static class TurtleMoveControl extends MoveControl {
diff --git a/src/main/java/net/minecraft/world/entity/animal/WaterAnimal.java b/src/main/java/net/minecraft/world/entity/animal/WaterAnimal.java
index 30c18bb74570be1cd978622e4e1ee9f502eea870..adf92c9c02db3617be6b8c397c1d7085ea246838 100644
--- a/src/main/java/net/minecraft/world/entity/animal/WaterAnimal.java
+++ b/src/main/java/net/minecraft/world/entity/animal/WaterAnimal.java
@@ -51,7 +51,7 @@ public abstract class WaterAnimal extends PathfinderMob {
             this.setAirSupply(air - 1);
             if (this.getAirSupply() == -20) {
                 this.setAirSupply(0);
-                this.hurt(DamageSource.DROWN, block, 2.0F);
+                this.hurt(DamageSource.DROWN, null, null, 2.0F);
             }
         } else {
             this.setAirSupply(300);
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
index 7d5798e4f71a1b9f320af21b65b3f4994be029e2..59c8860b1311aee5d1da3a7d91ca0367660376f6 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
@@ -435,14 +435,14 @@ public class Llama extends AbstractChestedHorse implements RangedAttackMob {
             return false;
         } else {
             if (fallDistance >= 6.0F) {
-                this.hurt(damageSource, block, (float) i);
+                this.hurt(damageSource, null, null, (float) i);
                 if (this.isVehicle()) {
                     Iterator iterator = this.getIndirectPassengers().iterator();
 
                     while (iterator.hasNext()) {
                         Entity entity = (Entity) iterator.next();
 
-                        entity.hurt(damageSource, block, (float) i);
+                        entity.hurt(damageSource, null, null, (float) i);
                     }
                 }
             }
diff --git a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
index 2c7fe6a50bef785ef2c1d613111ac53b68a0ddca..b2305f96a295060cc5d09ce2cb62b5bc1bff8689 100644
--- a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
+++ b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
@@ -112,7 +112,7 @@ public class EndCrystal extends Entity {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else if (source.getEntity() instanceof EnderDragon) {
@@ -120,7 +120,7 @@ public class EndCrystal extends Entity {
         } else {
             if (!this.isRemoved() && !this.level.isClientSide) {
                 // CraftBukkit start - All non-living entities need this
-                if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, source, amount, false)) {
+                if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, damagerEntity, damagerBlock, source, amount, false)) {
                     return false;
                 }
                 // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
index ae7994ffd0d6d17666d631533fdf90ba151fb56c..7a8c5667fe1ecd11f5deadbde783b298825004db 100644
--- a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -494,7 +494,7 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else if (source != DamageSource.DROWN && !(source.getEntity() instanceof WitherBoss)) {
@@ -522,7 +522,7 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
                         this.idleHeadUpdates[i] += 3;
                     }
 
-                    return super.hurt(source, block, amount);
+                    return super.hurt(source, damagerEntity, damagerBlock, amount);
                 }
             }
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
index 26c7a8ae360eafd236bda0f0512d81ea6bafc78c..afae4c40ef00774e181a842c6bf3f63fdf7d6536 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
@@ -380,7 +380,7 @@ public class EnderMan extends Monster implements NeutralMob {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else if (source instanceof IndirectEntityDamageSource) {
@@ -388,7 +388,7 @@ public class EnderMan extends Monster implements NeutralMob {
             boolean flag;
 
             if (entity instanceof ThrownPotion) {
-                flag = this.hurtWithCleanWater(source, (ThrownPotion) entity, amount);
+                flag = this.hurtWithCleanWater(source, damagerEntity, damagerBlock, (ThrownPotion) entity, amount);
             } else {
                 flag = false;
             }
@@ -403,7 +403,7 @@ public class EnderMan extends Monster implements NeutralMob {
 
             return flag;
         } else {
-            boolean flag1 = super.hurt(source, block, amount);
+            boolean flag1 = super.hurt(source, damagerEntity, damagerBlock, amount);
 
             if (!this.level.isClientSide() && !(source.getEntity() instanceof LivingEntity) && this.random.nextInt(10) != 0 && this.tryEscape(source == DamageSource.DROWN ? com.destroystokyo.paper.event.entity.EndermanEscapeEvent.Reason.DROWN : com.destroystokyo.paper.event.entity.EndermanEscapeEvent.Reason.INDIRECT)) { // Paper - use to be critical hits as else, but mojang removed critical hits in 1.16.2 due to MC-185684
                 this.teleport();
@@ -413,13 +413,13 @@ public class EnderMan extends Monster implements NeutralMob {
         }
     }
 
-    private boolean hurtWithCleanWater(DamageSource source, ThrownPotion potion, float amount) {
+    private boolean hurtWithCleanWater(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, ThrownPotion potion, float amount) {
         ItemStack itemstack = potion.getItem();
         Potion potionregistry = PotionUtils.getPotion(itemstack);
         List<MobEffectInstance> list = PotionUtils.getMobEffects(itemstack);
         boolean flag = potionregistry == Potions.WATER && list.isEmpty();
 
-        return flag ? super.hurt(source, block, amount) : false;
+        return flag && super.hurt(source, damagerEntity, damagerBlock, amount);
     }
 
     public boolean isCreepy() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ghast.java b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
index 4a2f03412540f515d0cdad51845df8fe210786c5..d151b07db1d26c6600fb3e15771162ee3cf095ca 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ghast.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
@@ -13,13 +13,7 @@ import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.EntityDimensions;
-import net.minecraft.world.entity.EntityType;
-import net.minecraft.world.entity.FlyingMob;
-import net.minecraft.world.entity.LivingEntity;
-import net.minecraft.world.entity.Mob;
-import net.minecraft.world.entity.MobSpawnType;
-import net.minecraft.world.entity.Pose;
+import net.minecraft.world.entity.*;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.control.MoveControl;
@@ -33,6 +27,8 @@ import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 import org.bukkit.craftbukkit.block.CraftBlock;
 
+import javax.annotation.Nullable;
+
 
 public class Ghast extends FlyingMob implements Enemy {
 
@@ -88,12 +84,12 @@ public class Ghast extends FlyingMob implements Enemy {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (Ghast.isReflectedFireball(source)) {
-            super.hurt(source, block, 1000.0F);
+            super.hurt(source, damagerEntity, damagerBlock, 1000.0F);
             return true;
         } else {
-            return this.isInvulnerableTo(source) ? false : super.hurt(source, block, amount);
+            return this.isInvulnerableTo(source) ? false : super.hurt(source, damagerEntity, damagerBlock, amount);
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ravager.java b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
index 84ad67e10803caf144ecb1d6df43d1c04f89a1ff..eab652ca8ad2c1ff8c58cdd4e182d386ba0c54a1 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ravager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
@@ -253,7 +253,7 @@ public class Ravager extends Raider {
             for (Iterator iterator = list.iterator(); iterator.hasNext(); this.strongKnockback(entityliving)) {
                 entityliving = (LivingEntity) iterator.next();
                 if (!(entityliving instanceof AbstractIllager)) {
-                    entityliving.hurt(DamageSource.mobAttack(this), block, 6.0F);
+                    entityliving.hurt(DamageSource.mobAttack(this), this, null, 6.0F);
                 }
             }
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index 5fe3440169f76f75508f695cc4b6799e47ebd1cd..fef219589544a4debd6931a02544b9a879ba90ff 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -445,7 +445,7 @@ public class Shulker extends AbstractGolem implements Enemy {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         Entity entity;
 
         if (this.isClosed()) {
@@ -455,7 +455,7 @@ public class Shulker extends AbstractGolem implements Enemy {
             }
         }
 
-        if (!super.hurt(source, block, amount)) {
+        if (!super.hurt(source, damagerEntity, damagerBlock, amount)) {
             return false;
         } else {
             if ((double) this.getHealth() < (double) this.getMaxHealth() * 0.5D && this.random.nextInt(4) == 0) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
index 6163fa3073a3e53ca7fc11702dd6e390169829dd..ba2aae7356248ec9122e0441dce722ffc9b886bf 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
@@ -96,7 +96,7 @@ public class Silverfish extends Monster {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else {
@@ -104,7 +104,7 @@ public class Silverfish extends Monster {
                 this.friendsGoal.notifyHurt();
             }
 
-            return super.hurt(source, block, amount);
+            return super.hurt(source, damagerEntity, damagerBlock, amount);
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Slime.java b/src/main/java/net/minecraft/world/entity/monster/Slime.java
index 661c7f91e08f5850765fe6fcda283be24782004a..e1dacc26b07b9fae6da2f9ee23ee1236ba66b788 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Slime.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Slime.java
@@ -283,7 +283,7 @@ public class Slime extends Mob implements Enemy {
         if (this.isAlive()) {
             int i = this.getSize();
 
-            if (this.distanceToSqr(target) < 0.6D * (double) i * 0.6D * (double) i && this.hasLineOfSight(target) && target.hurt(DamageSource.mobAttack(this), block, this.getAttackDamage())) {
+            if (this.distanceToSqr(target) < 0.6D * (double) i * 0.6D * (double) i && this.hasLineOfSight(target) && target.hurt(DamageSource.mobAttack(this), this, null, this.getAttackDamage())) {
                 this.playSound(SoundEvents.SLIME_ATTACK, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
                 this.doEnchantDamageEffects(this, target);
             }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vex.java b/src/main/java/net/minecraft/world/entity/monster/Vex.java
index 8390d18e443ccb44d944f70ea54633dfc734b4c4..7782cef6138282e3d86957fa55c842bea77f8d33 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vex.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vex.java
@@ -77,7 +77,7 @@ public class Vex extends Monster {
         this.setNoGravity(true);
         if (this.hasLimitedLife && --this.limitedLifeTicks <= 0) {
             this.limitedLifeTicks = 20;
-            this.hurt(DamageSource.STARVE, block, 1.0F);
+            this.hurt(DamageSource.STARVE, null, null, 1.0F);
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
index 75e117e39e70e46bb0ebd43bb96df764e34dbc86..08ccf2cc214cad6e5c5c88e1ffe7a51b6b99822f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
@@ -345,8 +345,8 @@ public class Piglin extends AbstractPiglin implements CrossbowAttackMob, Invento
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
-        boolean flag = super.hurt(source, block, amount);
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
+        boolean flag = super.hurt(source, damagerEntity, damagerBlock, amount);
 
         if (this.level.isClientSide) {
             return false;
diff --git a/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java b/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java
index 4e9b804401c3d304a3f9b9908213ea8e49de5800..5ff109da755ddc65507f4e8b2129e22b638aa009 100644
--- a/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java
+++ b/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java
@@ -549,8 +549,8 @@ public class Warden extends Monster implements VibrationListener.VibrationListen
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
-        boolean flag = super.hurt(source, block, amount);
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
+        boolean flag = super.hurt(source, damagerEntity, damagerBlock, amount);
 
         if (!this.level.isClientSide && !this.isNoAi() && !this.isDiggingOrEmerging()) {
             Entity entity = source.getEntity();
diff --git a/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java b/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
index f8a49cc498b1d8ab5786ccdc40396d3771a9808e..1575dcfea2bcc1a31af5d3cc635d1218936b5f03 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
@@ -15,6 +15,8 @@ import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import org.bukkit.craftbukkit.block.CraftBlock;
 
+import javax.annotation.Nullable;
+
 
 public class DragonFireball extends AbstractHurtingProjectile {
     public static final float SPLASH_RANGE = 4.0F;
@@ -70,7 +72,7 @@ public class DragonFireball extends AbstractHurtingProjectile {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java b/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java
index cf3d988891d534b6f21a6e822ecc17bb6f191ca6..56591b1ce8eb63a8608de4f926771d56856f764e 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java
@@ -130,15 +130,13 @@ public class EvokerFangs extends Entity {
 
         if (target.isAlive() && !target.isInvulnerable() && target != entityliving1) {
             if (entityliving1 == null) {
-                org.bukkit.craftbukkit.event.CraftEventFactory.entityDamage = this; // CraftBukkit
-                target.hurt(DamageSource.MAGIC, block, 6.0F);
-                org.bukkit.craftbukkit.event.CraftEventFactory.entityDamage = null; // CraftBukkit
+                target.hurt(DamageSource.MAGIC, this, null, 6.0F);
             } else {
                 if (entityliving1.isAlliedTo(target)) {
                     return;
                 }
 
-                target.hurt(DamageSource.indirectMagic(this, entityliving1), block, 6.0F);
+                target.hurt(DamageSource.indirectMagic(this, entityliving1), entityliving1, null, 6.0F);
             }
 
         }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
index 213b298aa7dac0c80c1b28b1f6df5f977c42da6c..0d8b5c45a90e1fd619c276defdcf1d2c602dc249 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
@@ -240,9 +240,7 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
 
         if (f > 0.0F) {
             if (this.attachedToEntity != null) {
-                CraftEventFactory.entityDamage = this; // CraftBukkit
-                this.attachedToEntity.hurt(DamageSource.fireworks(this, this.getOwner()), block, 5.0F + (float) (nbttaglist.size() * 2));
-                CraftEventFactory.entityDamage = null; // CraftBukkit
+                this.attachedToEntity.hurt(DamageSource.fireworks(this, this.getOwner()), this, null, 5.0F + (float) (nbttaglist.size() * 2));
             }
 
             double d0 = 5.0D;
@@ -268,10 +266,7 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
 
                     if (flag) {
                         float f1 = f * (float) Math.sqrt((5.0D - (double) this.distanceTo(entityliving)) / 5.0D);
-
-                        CraftEventFactory.entityDamage = this; // CraftBukkit
-                        entityliving.hurt(DamageSource.fireworks(this, this.getOwner()), block, f1);
-                        CraftEventFactory.entityDamage = null; // CraftBukkit
+                        entityliving.hurt(DamageSource.fireworks(this, this.getOwner()), this, null, f1);
                     }
                 }
             }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java b/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java
index 46358e895adef234e3379dee7dcf24d1b4569a8e..d8c52d05b91b8371a10c9d268dd99adfcac3a835 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java
@@ -62,7 +62,7 @@ public class LlamaSpit extends Projectile {
         Entity entity = this.getOwner();
 
         if (entity instanceof LivingEntity) {
-            entityHitResult.getEntity().hurt(DamageSource.indirectMobAttack(this, (LivingEntity) entity).setProjectile(), block, 1.0F);
+            entityHitResult.getEntity().hurt(DamageSource.indirectMobAttack(this, (LivingEntity) entity).setProjectile(), entity, null, 1.0F);
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java b/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
index 97141e4c05cbfe6d82fb7eb01866d7266477b05f..2c712a2ed8ac318a8c8bd0f3db58805fefb2f60e 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
@@ -301,7 +301,7 @@ public class ShulkerBullet extends Projectile {
         Entity entity = entityHitResult.getEntity();
         Entity entity1 = this.getOwner();
         LivingEntity entityliving = entity1 instanceof LivingEntity ? (LivingEntity) entity1 : null;
-        boolean flag = entity.hurt(DamageSource.indirectMobAttack(this, entityliving).setProjectile(), block, 4.0F);
+        boolean flag = entity.hurt(DamageSource.indirectMobAttack(this, entityliving).setProjectile(), entityliving, null, 4.0F);
 
         if (flag) {
             this.doEnchantDamageEffects(entityliving, entity);
@@ -331,9 +331,9 @@ public class ShulkerBullet extends Projectile {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         // CraftBukkit start
-        if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, source, amount, false)) {
+        if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, damagerEntity, damagerBlock, source, amount, false)) {
             return false;
         }
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java b/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java
index b04b039fd93be063e6dd7911639f87545f113714..c78bfe018159b47254232d50a8438a930a6bc361 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java
@@ -15,6 +15,9 @@ import net.minecraft.world.phys.HitResult;
 import org.bukkit.craftbukkit.block.CraftBlock;
 import org.bukkit.event.entity.EntityCombustByEntityEvent; // CraftBukkit
 
+import javax.annotation.Nullable;
+
+
 public class SmallFireball extends Fireball {
 
     public SmallFireball(EntityType<? extends SmallFireball> type, Level world) {
@@ -50,7 +53,7 @@ public class SmallFireball extends Fireball {
                 entity.setSecondsOnFire(event.getDuration(), false);
             }
             // CraftBukkit end
-            if (!entity.hurt(DamageSource.fireball(this, entity1), block, 5.0F)) {
+            if (!entity.hurt(DamageSource.fireball(this, entity1), entity1, null, 5.0F)) {
                 entity.setRemainingFireTicks(i);
             } else if (entity1 instanceof LivingEntity) {
                 this.doEnchantDamageEffects((LivingEntity) entity1, entity);
@@ -91,7 +94,7 @@ public class SmallFireball extends Fireball {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         return false;
     }
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java
index 7b7c0b174f0ab837c2b1072ecfe82d2b2892deb0..00976d17c8caefbb5ecfd8e13d53867b08b32088 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java
@@ -46,7 +46,7 @@ public class ThrownEgg extends ThrowableItemProjectile {
     @Override
     protected void onHitEntity(EntityHitResult entityHitResult) {
         super.onHitEntity(entityHitResult);
-        entityHitResult.getEntity().hurt(DamageSource.thrown(this, this.getOwner()), block, 0.0F);
+        entityHitResult.getEntity().hurt(DamageSource.thrown(this, this.getOwner()), this.getOwner(), null, 0.0F);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
index 8f11881f2fdbf022a7af8f356fa2c72a88371c95..bc4d2311a1a5b539036d2c3222577cc26b1f41bd 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -41,7 +41,7 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
     @Override
     protected void onHitEntity(EntityHitResult entityHitResult) {
         super.onHitEntity(entityHitResult);
-        entityHitResult.getEntity().hurt(DamageSource.thrown(this, this.getOwner()), block, 0.0F);
+        entityHitResult.getEntity().hurt(DamageSource.thrown(this, this.getOwner()), this.getOwner(), null, 0.0F);
     }
 
     @Override
@@ -82,9 +82,7 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
 
                         entityplayer.connection.teleport(teleEvent.getTo());
                         entity.resetFallDistance();
-                        CraftEventFactory.entityDamage = this;
-                        entity.hurt(DamageSource.FALL, block, 5.0F);
-                        CraftEventFactory.entityDamage = null;
+                        entity.hurt(DamageSource.FALL, this, null, 5.0F);
                     }
                     // CraftBukkit end
                 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
index 3575637349a40b588f46e5b9207a235647abca22..f039b333e092e8d3af6c8c1ed59ff53bd5511ac9 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
@@ -162,7 +162,7 @@ public class ThrownPotion extends ThrowableItemProjectile implements ItemSupplie
                 if (entityliving instanceof Axolotl axolotl && event.getIntensity(affectedEntity) > 0) {
                     axolotl.rehydrate();
                 } else {
-                    entityliving.hurt(DamageSource.indirectMagic(this, this.getOwner()), block, 1.0F);
+                    entityliving.hurt(DamageSource.indirectMagic(this, this.getOwner()), this.getOwner(), null, 1.0F);
                 }
             }
             // Paper end
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
index 3bd466b08aebe79a3d5c3b58d6c742b9b5991df3..9fdc1c96cbb06dfc94d8dfa6382d051066179e1a 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
@@ -137,12 +137,13 @@ public class ThrownTrident extends AbstractArrow {
         }
 
         Entity entity1 = this.getOwner();
-        DamageSource damagesource = DamageSource.trident(this, entity1 == null ? this : entity1);
+        final Entity attacker = entity1 == null ? this : entity1;
+        DamageSource damagesource = DamageSource.trident(this, attacker);
 
         this.dealtDamage = true;
         SoundEvent soundeffect = SoundEvents.TRIDENT_HIT;
 
-        if (entity.hurt(damagesource, block, f)) {
+        if (entity.hurt(damagesource, attacker, null, f)) {
             if (entity.getType() == EntityType.ENDERMAN) {
                 return;
             }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java b/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java
index dc5dd2196bf1e20b8403d0a728cb80c046dcb14a..0df3ded3b7072cd3737a689201f2a41c702e660f 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java
@@ -23,6 +23,9 @@ import net.minecraft.world.phys.HitResult;
 import org.bukkit.craftbukkit.block.CraftBlock;
 import org.bukkit.event.entity.ExplosionPrimeEvent; // CraftBukkit
 
+import javax.annotation.Nullable;
+
+
 public class WitherSkull extends AbstractHurtingProjectile {
 
     private static final EntityDataAccessor<Boolean> DATA_DANGEROUS = SynchedEntityData.defineId(WitherSkull.class, EntityDataSerializers.BOOLEAN);
@@ -61,7 +64,7 @@ public class WitherSkull extends AbstractHurtingProjectile {
             if (entity1 instanceof LivingEntity) {
                 LivingEntity entityliving = (LivingEntity) entity1;
 
-                flag = entity.hurt(DamageSource.witherSkull(this, entityliving), block, 8.0F);
+                flag = entity.hurt(DamageSource.witherSkull(this, entityliving), entityliving, null, 8.0F);
                 if (flag) {
                     if (entity.isAlive()) {
                         this.doEnchantDamageEffects(entityliving, entity);
@@ -70,7 +73,7 @@ public class WitherSkull extends AbstractHurtingProjectile {
                     }
                 }
             } else {
-                flag = entity.hurt(DamageSource.MAGIC, block, 5.0F);
+                flag = entity.hurt(DamageSource.MAGIC, null, null, 5.0F);
             }
 
             if (flag && entity instanceof LivingEntity) {
@@ -116,7 +119,7 @@ public class WitherSkull extends AbstractHurtingProjectile {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index 00e0f80116c130591d2f38defa178c6722577bda..9ce3c2316bf0570451dd6705a1d6a03f37fa6a3c 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -293,12 +293,12 @@ public abstract class Raider extends PatrollingMonster {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.hasActiveRaid()) {
             this.getCurrentRaid().updateBossbar();
         }
 
-        return super.hurt(source, block, amount);
+        return super.hurt(source, damagerEntity, damagerBlock, amount);
     }
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
index cad56e46f95d67a629cf6cd064a5e80d84adacdb..37834a590071797b9365e67f21b679bd691b7d53 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
@@ -172,7 +172,7 @@ public class Boat extends Entity {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else if (!this.level.isClientSide && !this.isRemoved()) {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartTNT.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartTNT.java
index 12675934750cb78eaf8275c4d5f40debe3e817a7..b0a170ffa8943e92b46397e0fca56458f1af51a8 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartTNT.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartTNT.java
@@ -20,6 +20,8 @@ import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.material.FluidState;
 import org.bukkit.craftbukkit.block.CraftBlock;
 
+import javax.annotation.Nullable;
+
 
 public class MinecartTNT extends AbstractMinecart {
     private static final byte EVENT_PRIME = 10;
@@ -69,7 +71,7 @@ public class MinecartTNT extends AbstractMinecart {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         Entity entity = source.getDirectEntity();
         if (entity instanceof AbstractArrow abstractArrow) {
             if (abstractArrow.isOnFire()) {
@@ -77,7 +79,7 @@ public class MinecartTNT extends AbstractMinecart {
             }
         }
 
-        return super.hurt(source, block, amount);
+        return super.hurt(source, damagerEntity, damagerBlock, amount);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/Explosion.java b/src/main/java/net/minecraft/world/level/Explosion.java
index 70606d6bf91f24bc25605759a1ee965a2faa35b4..a8351392353bc59269d53db3359208371b95d6b8 100644
--- a/src/main/java/net/minecraft/world/level/Explosion.java
+++ b/src/main/java/net/minecraft/world/level/Explosion.java
@@ -239,7 +239,6 @@ public class Explosion {
                         double d13 = (1.0D - d7) * d12;
 
                         // CraftBukkit start
-                        CraftEventFactory.entityDamage = this.source;
                         entity.lastDamageCancelled = false;
 
                         // Special case ender dragon only give knockback if no damage is cancelled
@@ -255,14 +254,13 @@ public class Explosion {
                         if (entity instanceof EnderDragon) {
                             for (EnderDragonPart entityComplexPart : ((EnderDragon) entity).subEntities) {
                                 if (list.contains(entityComplexPart)) {
-                                    entityComplexPart.hurt(this.getDamageSource(), block, (float) ((int) ((d13 * d13 + d13) / 2.0D * 7.0D * (double) f2 + 1.0D)));
+                                    entityComplexPart.hurt(this.damageSource, this.source, null, (float) ((int) ((d13 * d13 + d13) / 2.0D * 7.0D * (double) f2 + 1.0D)));
                                 }
                             }
                         } else {
-                            entity.hurt(this.getDamageSource(), block, (float) ((int) ((d13 * d13 + d13) / 2.0D * 7.0D * (double) f2 + 1.0D)));
+                            entity.hurt(this.damageSource, this.source, null, (float) ((int) ((d13 * d13 + d13) / 2.0D * 7.0D * (double) f2 + 1.0D)));
                         }
 
-                        CraftEventFactory.entityDamage = null;
                         if (entity.lastDamageCancelled) { // SPIGOT-5339, SPIGOT-6252, SPIGOT-6777: Skip entity if damage event was cancelled
                             continue;
                         }
