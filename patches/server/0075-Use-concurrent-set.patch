From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Sun, 27 Nov 2022 13:51:12 -0600
Subject: [PATCH] Use concurrent set


diff --git a/build.gradle.kts b/build.gradle.kts
index 1156a3e3eaba2139fedd881e6713394ae0ea3d26..9cbdcb34970795b661db33db1c14af27b61f4b53 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -20,7 +20,7 @@ dependencies {
     implementation("io.papermc.paper:paper-mojangapi:1.19.2-R0.1-SNAPSHOT") {
         exclude("io.papermc.paper", "paper-api")
     }
-    implementation("dev.twelveoclock:fastutil-concurrent:1.0.5") {
+    implementation("dev.twelveoclock:fastutil-concurrent:1.0.6") {
         isChanging = true
     }
     // CatPaper end
diff --git a/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java b/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
index 019ba790042dff0f3beccb59eb1e161f744d3b9e..b0360ea143816c02737006e79314bc156212be6f 100644
--- a/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
+++ b/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
@@ -2,12 +2,14 @@ package io.papermc.paper.chunk;
 
 import com.destroystokyo.paper.util.misc.PlayerAreaMap;
 import com.destroystokyo.paper.util.misc.PooledLinkedHashSets;
+import dev.twelveoclock.fastutil.set.impl.ConcurrentLongOpenHashSet;
 import io.papermc.paper.configuration.GlobalConfiguration;
 import io.papermc.paper.util.CoordinateUtils;
 import io.papermc.paper.util.IntervalledCounter;
 import io.papermc.paper.util.MCUtil;
 import io.papermc.paper.util.TickThread;
 import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
+import it.unimi.dsi.fastutil.longs.LongSet;
 import it.unimi.dsi.fastutil.objects.Reference2IntOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Reference2ObjectLinkedOpenHashMap;
 import net.minecraft.network.protocol.game.ClientboundSetChunkCacheCenterPacket;
@@ -314,7 +316,7 @@ public final class PlayerChunkLoader {
     }
 
     protected final LongOpenHashSet isTargetedForPlayerLoad = new LongOpenHashSet();
-    protected final LongOpenHashSet chunkTicketTracker = new LongOpenHashSet();
+    protected final LongSet chunkTicketTracker = new ConcurrentLongOpenHashSet();
 
     public boolean isChunkNearPlayers(final int chunkX, final int chunkZ) {
         final PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<ServerPlayer> playersInSendRange = this.broadcastMap.getObjectsInRange(chunkX, chunkZ);
