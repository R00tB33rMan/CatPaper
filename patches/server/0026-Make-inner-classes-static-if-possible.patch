From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Sat, 22 Oct 2022 03:43:31 -0500
Subject: [PATCH] Make inner classes static if possible


diff --git a/src/main/java/net/minecraft/world/entity/animal/Fox.java b/src/main/java/net/minecraft/world/entity/animal/Fox.java
index 20d55a05b0eb7e2ccd22e3a35e31840ee9229619..314fd0778c9456989b9a0f1e11257423945d10b1 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Fox.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Fox.java
@@ -177,7 +177,7 @@ public class Fox extends Animal {
         this.goalSelector.addGoal(6, new Fox.SeekShelterGoal(1.25D));
         this.goalSelector.addGoal(7, new Fox.FoxMeleeAttackGoal(1.2000000476837158D, true));
         this.goalSelector.addGoal(7, new Fox.SleepGoal());
-        this.goalSelector.addGoal(8, new Fox.FoxFollowParentGoal(this, 1.25D));
+        this.goalSelector.addGoal(8, new FoxFollowParentGoal(this, 1.25D));
         this.goalSelector.addGoal(9, new Fox.FoxStrollThroughVillageGoal(32, 200));
         this.goalSelector.addGoal(10, new Fox.FoxEatBerriesGoal(1.2000000476837158D, 12, 1));
         this.goalSelector.addGoal(10, new LeapAtTargetGoal(this, 0.4F));
@@ -1187,7 +1187,7 @@ public class Fox extends Animal {
         }
     }
 
-    private class FoxFollowParentGoal extends FollowParentGoal {
+    private static class FoxFollowParentGoal extends FollowParentGoal {
 
         private final Fox fox;
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Squid.java b/src/main/java/net/minecraft/world/entity/animal/Squid.java
index 623de851962d3b8138590912db58bb308fd28f14..06ec9a39d4ed9b6a35743c4228b8b2575ead3ab5 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Squid.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Squid.java
@@ -54,7 +54,7 @@ public class Squid extends WaterAnimal {
 
     @Override
     protected void registerGoals() {
-        this.goalSelector.addGoal(0, new Squid.SquidRandomMovementGoal(this));
+        this.goalSelector.addGoal(0, new SquidRandomMovementGoal(this));
         this.goalSelector.addGoal(1, new Squid.SquidFleeGoal());
     }
 
@@ -231,7 +231,7 @@ public class Squid extends WaterAnimal {
         return this.tx != 0.0F || this.ty != 0.0F || this.tz != 0.0F;
     }
 
-    private class SquidRandomMovementGoal extends Goal {
+    private static class SquidRandomMovementGoal extends Goal {
 
         private final Squid squid;
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Phantom.java b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
index a000a6ecbfcbc7991987400ee85a97f847698e39..cb9a6369fbd051f4b99f9a64241afab0022c56d4 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Phantom.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
@@ -57,7 +57,7 @@ public class Phantom extends FlyingMob implements Enemy {
         this.attackPhase = Phantom.AttackPhase.CIRCLE;
         this.xpReward = 5;
         this.moveControl = new Phantom.PhantomMoveControl(this);
-        this.lookControl = new Phantom.PhantomLookControl(this);
+        this.lookControl = new PhantomLookControl(this);
     }
 
     @Override
@@ -319,7 +319,7 @@ public class Phantom extends FlyingMob implements Enemy {
         }
     }
 
-    private class PhantomLookControl extends LookControl {
+    private static class PhantomLookControl extends LookControl {
 
         public PhantomLookControl(Mob entity) {
             super(entity);
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
index b2bd04af188066c8427f944b0d9b1d30642f2cfd..d74e4ac7f17e78e84f358c135e4fd6329a06e5ef 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
@@ -64,8 +64,8 @@ public class Vindicator extends AbstractIllager {
         this.goalSelector.addGoal(0, new FloatGoal(this));
         this.goalSelector.addGoal(1, new Vindicator.VindicatorBreakDoorGoal(this));
         this.goalSelector.addGoal(2, new AbstractIllager.RaiderOpenDoorGoal(this));
-        this.goalSelector.addGoal(3, new Raider.HoldGroundAttackGoal(this, 10.0F));
-        this.goalSelector.addGoal(4, new Vindicator.VindicatorMeleeAttackGoal(this));
+        this.goalSelector.addGoal(3, new HoldGroundAttackGoal(this, 10.0F));
+        this.goalSelector.addGoal(4, new VindicatorMeleeAttackGoal(this));
         this.targetSelector.addGoal(1, (new HurtByTargetGoal(this, Raider.class)).setAlertOthers());
         this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, Player.class, true));
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, AbstractVillager.class, true));
@@ -237,7 +237,7 @@ public class Vindicator extends AbstractIllager {
         }
     }
 
-    class VindicatorMeleeAttackGoal extends MeleeAttackGoal {
+    static class VindicatorMeleeAttackGoal extends MeleeAttackGoal {
         public VindicatorMeleeAttackGoal(Vindicator vindicator) {
             super(vindicator, 1.0D, false);
         }
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index 3b6350000a7d86efa2bd315aad2accf72ac52ca5..6aef7e78ead5e6a1be85945b1a7d5506a722de71 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -62,7 +62,7 @@ public abstract class Raider extends PatrollingMonster {
     @Override
     protected void registerGoals() {
         super.registerGoals();
-        this.goalSelector.addGoal(1, new Raider.ObtainRaidLeaderBannerGoal<>(this));
+        this.goalSelector.addGoal(1, new ObtainRaidLeaderBannerGoal<>(this));
         this.goalSelector.addGoal(3, new PathfindToRaidGoal<>(this));
         this.goalSelector.addGoal(4, new Raider.RaiderMoveThroughVillageGoal(this, 1.0499999523162842D, 1));
         this.goalSelector.addGoal(5, new Raider.RaiderCelebration(this));
@@ -306,7 +306,7 @@ public abstract class Raider extends PatrollingMonster {
 
     public abstract SoundEvent getCelebrateSound();
 
-    public class ObtainRaidLeaderBannerGoal<T extends Raider> extends Goal {
+    public static class ObtainRaidLeaderBannerGoal<T extends Raider> extends Goal {
 
         private final T mob;
 
@@ -498,7 +498,7 @@ public abstract class Raider extends PatrollingMonster {
         }
     }
 
-    protected class HoldGroundAttackGoal extends Goal {
+    protected static class HoldGroundAttackGoal extends Goal {
 
         private final Raider mob;
         private final float hostileRadiusSqr;
diff --git a/src/main/java/net/minecraft/world/inventory/BeaconMenu.java b/src/main/java/net/minecraft/world/inventory/BeaconMenu.java
index 64e1571fab5f07cfe1b5203b36754f536b303f27..14726cd133db4c8e6be4c68729037a5e6ac70fff 100644
--- a/src/main/java/net/minecraft/world/inventory/BeaconMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/BeaconMenu.java
@@ -53,7 +53,7 @@ public class BeaconMenu extends AbstractContainerMenu {
         checkContainerDataCount(propertyDelegate, 3);
         this.beaconData = propertyDelegate;
         this.access = context;
-        this.paymentSlot = new BeaconMenu.PaymentSlot(this.beacon, 0, 136, 110);
+        this.paymentSlot = new PaymentSlot(this.beacon, 0, 136, 110);
         this.addSlot(this.paymentSlot);
         this.addDataSlots(propertyDelegate);
         boolean flag = true;
@@ -187,7 +187,7 @@ public class BeaconMenu extends AbstractContainerMenu {
         return !this.beacon.getItem(0).isEmpty();
     }
 
-    private class PaymentSlot extends Slot {
+    private static class PaymentSlot extends Slot {
 
         public PaymentSlot(Container inventory, int index, int x, int y) {
             super(inventory, index, x, y);
diff --git a/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java b/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java
index 940a66070f9f97678238ca276641d519d56455ad..0e16431dd952b0f91f836262f10271dcb267d5ca 100644
--- a/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java
+++ b/src/main/java/org/bukkit/craftbukkit/boss/CraftBossBar.java
@@ -219,7 +219,7 @@ public class CraftBossBar implements BossBar {
         }
     }
 
-    private final class FlagContainer {
+    private static final class FlagContainer {
 
         private Supplier<Boolean> get;
         private Consumer<Boolean> set;
diff --git a/src/main/java/org/bukkit/craftbukkit/persistence/CraftPersistentDataTypeRegistry.java b/src/main/java/org/bukkit/craftbukkit/persistence/CraftPersistentDataTypeRegistry.java
index e280c56991b5fbc6ad5def415e5e75e7e10108ce..bb0462bd593387917c89630222dc835eb56fb539 100644
--- a/src/main/java/org/bukkit/craftbukkit/persistence/CraftPersistentDataTypeRegistry.java
+++ b/src/main/java/org/bukkit/craftbukkit/persistence/CraftPersistentDataTypeRegistry.java
@@ -30,7 +30,7 @@ public final class CraftPersistentDataTypeRegistry {
 
     private final Function<Class, TagAdapter> CREATE_ADAPTER = this::createAdapter;
 
-    private class TagAdapter<T, Z extends Tag> {
+    private static class TagAdapter<T, Z extends Tag> {
 
         private final Function<T, Z> builder;
         private final Function<Z, T> extractor;
