From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Mon, 14 Nov 2022 23:49:05 -0600
Subject: [PATCH] More fixes for entities


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index c808470f858e6f97549c63d21433a4a209bd45d2..5ced83a50736ecbe6b4a3bd4d6870ca7adaf4a4e 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1012,7 +1012,7 @@ public class ServerPlayer extends Player {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else {
@@ -1040,7 +1040,7 @@ public class ServerPlayer extends Player {
                 // Paper start - cancellable death events
                 //return super.hurt(source, amount);
                 this.queueHealthUpdatePacket = true;
-                boolean damaged = super.hurt(source, block, amount);
+                boolean damaged = super.hurt(source, damagerEntity, damagerBlock, amount);
                 this.queueHealthUpdatePacket = false;
                 if (this.queuedHealthUpdatePacket != null) {
                     this.connection.send(this.queuedHealthUpdatePacket);
diff --git a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
index b5876100deb5b53a7bb27454bfe88531f6f5ae37..55cfd355ab17280288cd27efdb4fd30317775e33 100644
--- a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
@@ -196,7 +196,7 @@ public class IronGolem extends AbstractGolem implements NeutralMob {
         this.level.broadcastEntityEvent(this, (byte) 4);
         float f = this.getAttackDamage();
         float f1 = (int) f > 0 ? f / 2.0F + (float) this.random.nextInt((int) f) : f;
-        boolean flag = target.hurt(DamageSource.mobAttack(this), block, f1);
+        boolean flag = target.hurt(DamageSource.mobAttack(this), this, null, f1);
 
         if (flag) {
             double d0;
@@ -221,9 +221,9 @@ public class IronGolem extends AbstractGolem implements NeutralMob {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         IronGolem.Crackiness entityirongolem_cracklevel = this.getCrackiness();
-        boolean flag = super.hurt(source, block, amount);
+        boolean flag = super.hurt(source, damagerEntity, damagerBlock, amount);
 
         if (flag && this.getCrackiness() != entityirongolem_cracklevel) {
             this.playSound(SoundEvents.IRON_GOLEM_DAMAGE, 1.0F, 1.0F);
diff --git a/src/main/java/net/minecraft/world/entity/decoration/HangingEntity.java b/src/main/java/net/minecraft/world/entity/decoration/HangingEntity.java
index 4dae2f2d8b806a53e2616b304a49993d07d23adb..eed34374177fb1f1e1839b92407ca6f864cdddba 100644
--- a/src/main/java/net/minecraft/world/entity/decoration/HangingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/decoration/HangingEntity.java
@@ -198,7 +198,7 @@ public abstract class HangingEntity extends Entity {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/decoration/ItemFrame.java b/src/main/java/net/minecraft/world/entity/decoration/ItemFrame.java
index f72768140a2f9acb6b0a05a48dc09246893b7e61..bcfcfb9884896dd403f5dc8d380b013f58722110 100644
--- a/src/main/java/net/minecraft/world/entity/decoration/ItemFrame.java
+++ b/src/main/java/net/minecraft/world/entity/decoration/ItemFrame.java
@@ -177,15 +177,15 @@ public class ItemFrame extends HangingEntity {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
         if (this.fixed) {
-            return source != DamageSource.OUT_OF_WORLD && !source.isCreativePlayer() ? false : super.hurt(source, block, amount);
+            return source != DamageSource.OUT_OF_WORLD && !source.isCreativePlayer() ? false : super.hurt(source, damagerEntity, damagerBlock, amount);
         } else if (this.isInvulnerableTo(source)) {
             return false;
         } else if (!source.isExplosion() && !this.getItem().isEmpty()) {
             if (!this.level.isClientSide) {
                 // CraftBukkit start - fire EntityDamageEvent
-                if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, source, amount, false) || this.isRemoved()) {
+                if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, damagerEntity, damagerBlock, source, amount, false) || this.isRemoved()) {
                     return true;
                 }
                 // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
index 2837d8a5b308168e886729374c7d4563e18817ab..eb0e0f5d69cda41c28e26bf96ddb1891b3adbba7 100644
--- a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -288,9 +288,7 @@ public class FallingBlockEntity extends Entity {
                 float f2 = (float) Math.min(Mth.floor((float) i * this.fallDamagePerDistance), this.fallDamageMax);
 
                 this.level.getEntities(this, this.getBoundingBox(), predicate).forEach((entity) -> {
-                    CraftEventFactory.entityDamage = this; // CraftBukkit
-                    entity.hurt(damagesource1, block, f2);
-                    CraftEventFactory.entityDamage = null; // CraftBukkit
+                    entity.hurt(damagesource1, this, null, f2);
                 });
                 boolean flag = this.blockState.is(BlockTags.ANVIL);
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 51cd6a6a52d8b2e9213dc1384d64284ffbd10a5a..6f4c67ec72014ef009f7f67e6c79f3c1fe0bc572 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -313,8 +313,8 @@ public class Zombie extends Monster {
     // Paper end
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
-        if (!super.hurt(source, block, amount)) {
+    public boolean hurt(DamageSource source, @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
+        if (!super.hurt(source, damagerEntity, damagerBlock, amount)) {
             return false;
         } else if (!(this.level instanceof ServerLevel)) {
             return false;
diff --git a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
index c14d5eb4087e9d05eb950cc09c543f7ff65cfc38..48984002d34118a2bf7730bc420bbe8931b1a267 100644
--- a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -100,8 +100,8 @@ public class Hoglin extends Animal implements Enemy, HoglinBase {
     }
 
     @Override
-    public boolean hurt(DamageSource source, final CraftBlock block, float amount) {
-        boolean bl = super.hurt(source, block, amount);
+    public boolean hurt(DamageSource source,  @Nullable Entity damagerEntity, @Nullable final org.bukkit.block.Block damagerBlock, float amount) {
+        boolean bl = super.hurt(source, damagerEntity, damagerBlock, amount);
         if (this.level.isClientSide) {
             return false;
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java b/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java
index e6e82e3618431b6bc95f8e5680217dc38c54d090..599196ba4b73c3a58a07beb8a8e5a8bab7db1b4a 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java
@@ -54,7 +54,7 @@ public class LargeFireball extends Fireball {
             Entity entity = entityHitResult.getEntity();
             Entity entity1 = this.getOwner();
 
-            entity.hurt(DamageSource.fireball(this, entity1), block, 6.0F);
+            entity.hurt(DamageSource.fireball(this, entity1), entity1, null, 6.0F);
             if (entity1 instanceof LivingEntity) {
                 this.doEnchantDamageEffects((LivingEntity) entity1, entity);
             }
