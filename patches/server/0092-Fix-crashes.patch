From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Tue, 15 Nov 2022 03:25:27 -0600
Subject: [PATCH] Fix crashes


diff --git a/src/main/java/net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor.java b/src/main/java/net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor.java
index b02a1baa4804114f5cc8d79aa277758c70398dae..75ce602e51c04ddc160c328e3fc34d5617febc91 100644
--- a/src/main/java/net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor.java
+++ b/src/main/java/net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor.java
@@ -36,13 +36,9 @@ public class NearestLivingEntitySensor<T extends LivingEntity> extends Sensor<T>
 
         final Vec3 entityPosition = entity.position();
 
-        list.sort(new Comparator<LivingEntity>() {
-            @Override
-            public int compare(final LivingEntity o1, final LivingEntity o2) {
-                return Double.compare(entityVectorByID.get(o1.getId()).distanceToSqr(entityPosition), entityVectorByID.get(o2.getId()).distanceToSqr(entityPosition));
-            }
-        });
+        list.sort(Comparator.comparingDouble(new DistanceComparison(entityPosition, entityVectorByID)));
 
+        list.sort(Comparator.comparingDouble(entity::distanceToSqr));
 
         Brain<?> brain = entity.getBrain();
         brain.setMemory(MemoryModuleType.NEAREST_LIVING_ENTITIES, list);
@@ -61,4 +57,13 @@ public class NearestLivingEntitySensor<T extends LivingEntity> extends Sensor<T>
     public Set<MemoryModuleType<?>> requires() {
         return ImmutableSet.of(MemoryModuleType.NEAREST_LIVING_ENTITIES, MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES);
     }
+
+    private record DistanceComparison(Vec3 entityPosition, Map<Integer, Vec3> entityVectorByID) implements ToDoubleFunction<LivingEntity> {
+
+        @Override
+        public double applyAsDouble(final LivingEntity value) {
+            return entityPosition.distanceToSqr(entityVectorByID.get(value.getId()));
+        }
+
+    }
 }
