From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Sun, 27 Nov 2022 05:08:24 -0600
Subject: [PATCH] Remove timings


diff --git a/src/main/java/org/bukkit/plugin/SimplePluginManager.java b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
index 251af743cea34d36cc5ddb7f7c97c4f96a12fae8..a035d4354800e20c994fa42463ba0717a1036b58 100644
--- a/src/main/java/org/bukkit/plugin/SimplePluginManager.java
+++ b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
@@ -718,6 +718,12 @@ public final class SimplePluginManager implements PluginManager {
         if (!plugin.isEnabled()) {
             throw new IllegalPluginAccessException("Plugin attempted to register " + event + " while not enabled");
         }
+
+        if (false) { // Spigot - RL handles useTimings check now // Paper
+            getEventListeners(event).register(new TimedRegisteredListener(listener, executor, priority, plugin, ignoreCancelled));
+        } else {
+            getEventListeners(event).register(new RegisteredListener(listener, executor, priority, plugin, ignoreCancelled));
+        }
     }
 
     @NotNull
diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
index fcede0b863ac63cdeba938ff7796ee4ca76fc004..175ebaec89ba43a324967e7d9241ec3e6d208a2e 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
@@ -301,16 +301,24 @@ public final class JavaPluginLoader implements PluginLoader {
                     plugin.getLogger().log(
                             Level.WARNING,
                             String.format(
-                                    "\"%s\" has registered a listener for %s on method \"%s\", but the event is Deprecated. \"%s\"; please notify the authors %s.",
-                                    plugin.getDescription().getFullName(),
-                                    clazz.getName(),
-                                    method.toGenericString(),
-                                    (warning != null && warning.reason().length() != 0) ? warning.reason() : "Server performance will be affected",
-                                    Arrays.toString(plugin.getDescription().getAuthors().toArray())),
-                            warningState == WarningState.ON ? new AuthorNagException(null) : null);
+                                "\"%s\" has registered a listener for %s on method \"%s\", but the event is Deprecated. \"%s\"; please notify the authors %s.",
+                                plugin.getDescription().getFullName(),
+                                clazz.getName(),
+                                method.toGenericString(),
+                                (warning != null && warning.reason().length() != 0) ? warning.reason() : "Server performance will be affected",
+                                Arrays.toString(plugin.getDescription().getAuthors().toArray())),
+                        warningState == WarningState.ON ? new AuthorNagException(null) : null);
                     break;
                 }
             }
+
+            final EventExecutor executor = EventExecutor.create(method, eventClass);
+            if (false) {
+                eventSet.add(new TimedRegisteredListener(listener, executor, eh.priority(), plugin, eh.ignoreCancelled()));
+            } else {
+                eventSet.add(new RegisteredListener(listener, executor, eh.priority(), plugin, eh.ignoreCancelled()));
+            }
+
         }
         return ret;
     }
