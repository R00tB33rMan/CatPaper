From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Sun, 4 Dec 2022 11:49:31 -0600
Subject: [PATCH] Fixes


diff --git a/build.gradle.kts b/build.gradle.kts
index abc348079eea9f58bac7fa8dc5418d2e9d39dbe9..3800d8dcbd5c57839853d6bbe7c0fa9506ef7298 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -9,14 +9,14 @@ java {
     withJavadocJar()
 }
 
-val adventureVersion = "4.11.0"
+val adventureVersion = "4.12.0"
 val apiAndDocs: Configuration by configurations.creating {
-    attributes {
-        attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category.DOCUMENTATION))
-        attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling.EXTERNAL))
-        attribute(DocsType.DOCS_TYPE_ATTRIBUTE, objects.named(DocsType.SOURCES))
-        attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage.JAVA_RUNTIME))
-    }
+	attributes {
+		attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category.DOCUMENTATION))
+		attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling.EXTERNAL))
+		attribute(DocsType.DOCS_TYPE_ATTRIBUTE, objects.named(DocsType.SOURCES))
+		attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage.JAVA_RUNTIME))
+	}
 }
 configurations.api {
     extendsFrom(apiAndDocs)
@@ -41,28 +41,28 @@ dependencies {
     apiAndDocs("net.kyori:adventure-text-minimessage")
     apiAndDocs("net.kyori:adventure-text-serializer-gson")
     apiAndDocs("net.kyori:adventure-text-serializer-legacy")
-    apiAndDocs("net.kyori:adventure-text-serializer-plain")
-    apiAndDocs("net.kyori:adventure-text-logger-slf4j")
-    api("org.apache.logging.log4j:log4j-api:2.19.0")
-    api("org.slf4j:slf4j-api:2.0.3")
+	apiAndDocs("net.kyori:adventure-text-serializer-plain")
+	apiAndDocs("net.kyori:adventure-text-logger-slf4j")
+	api("org.apache.logging.log4j:log4j-api:2.19.0")
+	api("org.slf4j:slf4j-api:2.0.5")
 
-    implementation("org.ow2.asm:asm:9.4")
-    implementation("org.ow2.asm:asm-commons:9.4")
-    // Paper end
+	implementation("org.ow2.asm:asm:9.4")
+	implementation("org.ow2.asm:asm-commons:9.4")
+	// Paper end
 
-    compileOnly("org.apache.maven:maven-resolver-provider:3.8.5")
-    compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.8.2")
-    compileOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.8.2")
+	compileOnly("org.apache.maven:maven-resolver-provider:3.8.5")
+	compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.2")
+	compileOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.2")
 
-    compileOnly("com.google.code.findbugs:jsr305:3.0.2") // Paper
+	compileOnly("com.google.code.findbugs:jsr305:3.0.2") // Paper
 
-    val annotations = "org.jetbrains:annotations:23.0.0" // Paper - we don't want Java 5 annotations...
-    compileOnly(annotations)
-    testCompileOnly(annotations)
+	val annotations = "org.jetbrains:annotations:23.0.0" // Paper - we don't want Java 5 annotations...
+	compileOnly(annotations)
+	testCompileOnly(annotations)
 
-    // Paper start - add checker
-    val checkerQual = "org.checkerframework:checker-qual:3.21.0"
-    compileOnlyApi("org.checkerframework:checker-qual:3.25.0")
+	// Paper start - add checker
+	val checkerQual = "org.checkerframework:checker-qual:3.21.0"
+	compileOnlyApi("org.checkerframework:checker-qual:3.25.0")
     testCompileOnly("org.checkerframework:checker-qual:3.25.0")
     // Paper end
 
